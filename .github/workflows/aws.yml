name: Deploy to Amazon ECS

on:
    push:
        branches: ['dev']

env:
    AWS_REGION: ap-northeast-2 
    ECR_REPOSITORY: ${{ secrets.AWS }} 
    ECS_SERVICE: ${{ secrets.AWS }} 
    ECS_CLUSTER: ${{ secrets.AWS }} 
    ECS_TASK_DEFINITION:
        .aws/task-definition.json 
       
    CONTAINER_NAME:
        ${{ secrets.AWS }} 
        

permissions:
    contents: read

jobs:
    deploy:
        name: Deploy
        runs-on: ubuntu-latest
        environment: production

        steps:
            - name: Checkout
              uses: actions/checkout@v3

            # 2. 깃헙 settings > secrets 에 올려놓은 비밀 값을 복사해 .env 파일로 생성
            - name: create env file 
              run: |
                touch .env
                echo "${{ secrets.ENV_VARS }}" >> .env

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: ${{ env.AWS_REGION }}

            - name: ECR 로그인 중!
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v1

            - name: ECR에 이미지 푸쉬 중!
              id: build-image
              env:
                  ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
                  IMAGE_TAG: ${{ github.sha }}
              run: |
                  # Build a docker container and
                  # push it to ECR so that it can
                  # be deployed to ECS.
                  docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
                  docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
                  echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

            - name: ECS 작업 정의에 새로운 이미지 넣는 중!
              id: task-def
              uses: aws-actions/amazon-ecs-render-task-definition@v1
              with:
                  task-definition: ${{ env.ECS_TASK_DEFINITION }}
                  container-name: ${{ env.CONTAINER_NAME }}
                  image: ${{ steps.build-image.outputs.image }}

            - name: 배포중!
              uses: aws-actions/amazon-ecs-deploy-task-definition@v1
              with:
                  task-definition: ${{ steps.task-def.outputs.task-definition }}
                  service: ${{ env.ECS_SERVICE }}
                  cluster: ${{ env.ECS_CLUSTER }}
                  wait-for-service-stability: true
